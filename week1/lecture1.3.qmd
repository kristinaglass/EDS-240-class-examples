---
title: "Lecture 1.3"
date: 2024-01-08
editor_options: 
  chunk_output_type: console
---

## Load Packages
```{r}
library(tidyverse)
library(palmerpenguins)
library(ggplot2)
```


## Tidy Data

```{r}
# untidy data ----
temp_data_wide <- tribble(
  ~date, ~station1, ~station2,  ~station3,
  "2023-10-01", 30.1, 29.8,  31.2,
  "2023-11-01", 28.6, 29.1,  33.4,
  "2023-12-01", 29.9, 28.5,  32.3
)

#make tidy
temp_data_long <- temp_data_wide %>% 
  pivot_longer(cols = starts_with("station"),
               names_to = "station_id",
               values_to = "temp_c")
```


## Plot 1

```{r}

#mapping color globally
ggplot(na.omit(penguins),
       aes(x = bill_length_mm,
           y = bill_depth_mm,
           color = species)) +
  geom_point() +
  geom_smooth(method = "lm") + #mapping this way greates a line of best fit for each species
  scale_color_manual(values = c("darkorange", "purple", "cyan4"))

#piping into a ggplot and mapping color locally
penguins %>% 
  ggplot(aes(x = bill_length_mm, 
             y = bill_depth_mm)) +
  geom_point(aes(color = species)) +
  geom_smooth(method = "lm") #creating a best fit line this way does it across all data points rather than indivisial species

#ggplot() +
#  geom_point(data = penguins,
#             mapping = aes(x = bill_length_mm,
#                           y = bill_depth_mm))


ggplot(penguins, aes(x = body_mass_g, 
                     y = flipper_length_mm,
                     color = body_mass_g)) +
  geom_point() + 
  scale_color_gradient(low = "#132B43", high = "#F7DD4C")


#geom_point has a value called "stat" which by default is set to "identity" which will automatically plot data based on its identity
```


## Plot 2

```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar()
#geom_bar groups by unique factor levels and counts number of bars where the height of the bars matches the count of each observation type in its default setting
```

Overriding geom_bar's stat:

```{r}
penguins_summary <- penguins %>% 
  count(species)

ggplot(penguins_summary, aes(x = species, y = n)) +
  geom_bar(stat = "identity")
```


Override default stat mapping
```{r}
ggplot(penguins, aes(x = species, y = after_stat(prop), group = 1)) +
  geom_bar()
```


Position adjustments
```{r}
ggplot(penguins, aes(x = species, fill = island)) +
  geom_bar(position = position_dodge2(preserve = "single")) #default position is stack and stacks groups by default
#fill still creates stacked chart but by proportion
#dodge separates by count
#position_dodge2 preserves the width of an observation, specified by "total" and "single"
```


By default ggplot assumes the cartesian coordinate system

Cordinate system + themes
```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar() +
  #coord_cartesian() exists in ggplot by defauly
  #coord_flip()
  coord_polar() +
  theme_linedraw() +
  theme(
    axis.title = element_text(size = 17, color = "purple4")
  )
```








